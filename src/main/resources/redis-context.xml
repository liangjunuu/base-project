<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
	   default-lazy-init="true" default-init-method="init">

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大能够保持idel状态的对象数  -->
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<!-- 最大分配的对象数 -->
		<property name="maxTotal" value="${redis.pool.maxActive}" />
		<!-- 当borrow(引入)一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException -->
		<property name="maxWaitMillis" value="${redis.pool.maxWait}" />
		<!-- 当调用borrow Object方法时，是否进行有效性检查 -->
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>

	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" scope="singleton">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1">
			<list>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg name="host" value="${redis.host}" />
					<constructor-arg name="port" value="${redis.port}" type="int"/>
					<constructor-arg name="timeout" value="${redis.timeout}" type="int"/>
					<!--<constructor-arg name="pass" value="${redis.pass}"/>-->
				</bean>
			</list>
		</constructor-arg>
	</bean>

</beans>
